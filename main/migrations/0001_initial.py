# Generated by Django 4.2.5 on 2023-10-01 03:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, null=True)),
                ('username', models.CharField(max_length=120, unique=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('is_superuser', models.IntegerField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('is_staff', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='BankModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_balance', models.FloatField(default=0)),
                ('reserved_balance', models.FloatField(default=0)),
                ('liquidity_balance', models.FloatField(default=0)),
                ('uncategorized_balance', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'bank',
            },
        ),
        migrations.CreateModel(
            name='MarketMaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_maker_type', models.CharField(default='binary_constant_product', max_length=120)),
                ('initial_fund', models.FloatField(default=0)),
                ('cap_price', models.FloatField(default=0)),
                ('initial_positive_probability', models.FloatField(default=0.5)),
                ('initial_negative_probability', models.FloatField(default=0.5)),
            ],
        ),
        migrations.CreateModel(
            name='ReservePool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_positive', models.FloatField(default=0)),
                ('_negative', models.FloatField(default=0)),
                ('_total', models.FloatField(default=0)),
                ('_positive_market_size', models.FloatField(default=0)),
                ('_negative_market_size', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_type', models.CharField(default='binary_constant_product', max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(default='buy', max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='PredictionMarket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Untitled Prediction Market', max_length=500)),
                ('description', models.TextField(default='No description')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('is_active', models.IntegerField(default=1)),
                ('market_maker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.marketmaker')),
                ('related_markets', models.ManyToManyField(to='main.predictionmarket')),
                ('reserve_pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.reservepool')),
                ('snapshot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.snapshot')),
            ],
        ),
        migrations.CreateModel(
            name='BinarySnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_positive', models.FloatField(default=0)),
                ('_negative', models.FloatField(default=0)),
                ('_positive_market_size', models.FloatField(default=0)),
                ('_negative_market_size', models.FloatField(default=0)),
                ('_timestamp', models.DateTimeField(auto_now_add=True)),
                ('snapshots', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='binary_snapshots', to='main.snapshot')),
            ],
        ),
    ]
